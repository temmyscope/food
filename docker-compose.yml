version: '3'
services:

  foodics:
    image: foodics
    container_name: foodics
    volumes:
      - ./:/var/www/html
    depends_on:
      db: 
        condition: service_healthy
      redis:
        condition: service_started
      mail:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile
    links:
      - db
    ports:
      - 8080:8080
    restart: always
    environment:
      CONTAINER_ROLE: app

  db:
    image: mysql:latest
    container_name: db
    restart: always
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: mysqladmin ping -h localhost --user=${DB_USERNAME} --password=${DB_PASSWORD}
      timeout: 20s
      retries: 10
    volumes:
      - ./docker/db:/var/lib/mysql

  redis:
    image: redis:7.0.4-alpine
    container_name: foodics_redis
    restart: always
    expose:
      - 6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - ./docker/redis:/var/lib/redis/data

  queue:
    image: foodics
    depends_on:
      - foodics
    volumes:
      - .:/var/www/html
    environment:
      CONTAINER_ROLE: queue
      QUEUE_DRIVER: redis
      REDIS_HOST: redis

  mail:
    image: axllent/mailpit
    container_name: mailpit
    ports:
      - 1025:1025
      - 8025:8025
    restart: unless-stopped

networks:
  default:
    name: foodics-network

volumes:
  cache:
    driver: local